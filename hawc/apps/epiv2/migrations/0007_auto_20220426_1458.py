# Generated by Django 3.2.13 on 2022-04-26 19:58

from django.db import migrations, models

import hawc.apps.common.models


class Migration(migrations.Migration):

    dependencies = [
        ("epiv2", "0006_auto_20220426_1354"),
    ]

    operations = [
        migrations.AlterField(
            model_name="dataextraction",
            name="ci_lcl",
            field=models.FloatField(blank=True, null=True, verbose_name="Lower bound"),
        ),
        migrations.AlterField(
            model_name="dataextraction",
            name="ci_type",
            field=models.CharField(
                choices=[
                    ("Rng", "Range [min, max]"),
                    ("P90", "10th/90th percentile"),
                    ("P95", "5th/95th percentile"),
                    ("P99", "1st/99th percentile"),
                ],
                default="Rng",
                max_length=3,
                verbose_name="Lower/upper bound type",
            ),
        ),
        migrations.AlterField(
            model_name="dataextraction",
            name="ci_ucl",
            field=models.FloatField(blank=True, null=True, verbose_name="Upper bound"),
        ),
        migrations.AlterField(
            model_name="dataextraction",
            name="variance_type",
            field=models.PositiveSmallIntegerField(
                choices=[
                    (0, "---"),
                    (1, "SD"),
                    (2, "SE"),
                    (3, "SEM"),
                    (4, "GSD"),
                    (5, "IQR (interquartile range)"),
                    (6, "other"),
                ],
                default=0,
                verbose_name="Type of variance estimate",
            ),
        ),
        migrations.AlterField(
            model_name="exposure",
            name="measurement_timing",
            field=models.CharField(
                blank=True,
                help_text='If timing is based on something other than age, specify the timing (e.g., start of employment at Factory A). If cross-sectional, enter "cross-sectional"',
                max_length=256,
                verbose_name="Timing of exposure measurement",
            ),
        ),
        migrations.AlterField(
            model_name="exposurelevel",
            name="ci_lcl",
            field=hawc.apps.common.models.NumericTextField(
                blank=True, default="", max_length=16, verbose_name="Lower bound"
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="exposurelevel",
            name="ci_type",
            field=models.CharField(
                choices=[
                    ("Rng", "Range [min, max]"),
                    ("P90", "10th/90th percentile"),
                    ("P95", "5th/95th percentile"),
                    ("P99", "1st/99th percentile"),
                ],
                default="Rng",
                max_length=3,
                verbose_name="Lower/upper bound type",
            ),
        ),
        migrations.AlterField(
            model_name="exposurelevel",
            name="ci_ucl",
            field=hawc.apps.common.models.NumericTextField(
                blank=True, default="", max_length=16, verbose_name="Upper bound"
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="exposurelevel",
            name="percentile_25",
            field=hawc.apps.common.models.NumericTextField(
                blank=True, default="", max_length=16, verbose_name="25th Percentile"
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="exposurelevel",
            name="percentile_75",
            field=hawc.apps.common.models.NumericTextField(
                blank=True, default="", max_length=16, verbose_name="75th Percentile"
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="exposurelevel",
            name="variance_type",
            field=models.PositiveSmallIntegerField(
                choices=[
                    (0, "---"),
                    (1, "SD"),
                    (2, "SE"),
                    (3, "SEM"),
                    (4, "GSD"),
                    (5, "IQR (interquartile range)"),
                    (6, "other"),
                ],
                default=0,
                verbose_name="Type of variance estimate",
            ),
        ),
    ]
