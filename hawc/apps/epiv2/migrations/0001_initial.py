# Generated by Django 3.2.10 on 2022-01-07 16:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("study", "0011_auto_20190416_2035"),
    ]

    operations = [
        migrations.CreateModel(
            name="AgeProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text='Select all that apply. Note: do not select "Pregnant women" if pregnant women are only included as part of a general population sample',
                        max_length=128,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Chemical",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("code", models.CharField(blank=True, max_length=2)),
                ("name", models.CharField(max_length=64, unique=True)),
            ],
            options={"verbose_name_plural": "Countries", "ordering": ("name",),},
        ),
        migrations.CreateModel(
            name="Exposure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("biomonitoring_matrix", models.CharField(max_length=128)),
                (
                    "measurement_timing",
                    models.CharField(
                        help_text='If timing is based on something other than age, specify the timing (e.g., start of employment at Factory A). If cross-sectional, enter "cross-sectional"',
                        max_length=128,
                        verbose_name="Timing of exposure measurement",
                    ),
                ),
                (
                    "exposure_route",
                    models.CharField(
                        choices=[
                            ("IH", "Inhalation"),
                            ("OR", "Oral"),
                            ("DE", "Dermal"),
                            ("IU", "In utero"),
                            ("IV", "Intravenous"),
                            ("UK", "Unknown/Total"),
                        ],
                        max_length=2,
                    ),
                ),
                ("analytic_method", models.CharField(max_length=128)),
                ("comments", models.CharField(blank=True, max_length=128)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="MeasurementType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("description", models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name="StudyPopulation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "study_design",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("CO", "Cohort"),
                            ("CC", "Case-control"),
                            ("NC", "Nested case-control"),
                            ("CR", "Case report"),
                            ("SE", "Case series"),
                            ("RT", "Randomized controlled trial"),
                            ("NT", "Non-randomized controlled trial"),
                            ("CS", "Cross-sectional"),
                            ("OT", "Other"),
                        ],
                        max_length=128,
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("GP", "General population"),
                            ("OC", "Occupational"),
                            ("OT", "Other"),
                        ],
                        max_length=128,
                    ),
                ),
                (
                    "age_description",
                    models.CharField(
                        help_text='Select all that apply. Note: do not select "pregnant women" if pregnant women are only included as part of a general population sample.',
                        max_length=128,
                    ),
                ),
                (
                    "sex",
                    models.CharField(
                        choices=[
                            ("U", "Not reported"),
                            ("M", "Male"),
                            ("F", "Female"),
                            ("B", "Male and Female"),
                        ],
                        default="U",
                        max_length=1,
                    ),
                ),
                (
                    "summary",
                    models.CharField(
                        help_text="Breifly describe the study population (e.g., Women undergoing fertility treatment).",
                        max_length=128,
                        verbose_name="Population Summary",
                    ),
                ),
                (
                    "region",
                    models.CharField(
                        blank=True, max_length=128, verbose_name="Other geographic information"
                    ),
                ),
                (
                    "participant_n",
                    models.PositiveIntegerField(
                        help_text="Enter the total number of participants enrolled in the study (after exclusions).\nNote: Sample size for specific result can be extracted in qualitative data extraction",
                        verbose_name="Overall study population N",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("age_profile", models.ManyToManyField(blank=True, to="epiv2.AgeProfile")),
                ("countries", models.ManyToManyField(blank=True, to="epiv2.Country")),
                (
                    "study",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="study_populations_v2",
                        to="study.study",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Outcome",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("health_outcome", models.CharField(max_length=128)),
                (
                    "health_outcome_system",
                    models.CharField(
                        choices=[("RE", "Reproductive")],
                        help_text="If multiple cancer types are present, report all types under Cancer.",
                        max_length=128,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "study_population",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="outcomes",
                        to="epiv2.studypopulation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ExposureLevel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "sub_population",
                    models.CharField(
                        blank=True, max_length=128, verbose_name="Sub-population (if relevant)"
                    ),
                ),
                ("central_tendency", models.CharField(max_length=128)),
                (
                    "central_tendency_type",
                    models.CharField(
                        choices=[("MED", "Median")],
                        default="MED",
                        max_length=128,
                        verbose_name="Central tendency type (median preferred)",
                    ),
                ),
                ("minimum", models.FloatField()),
                ("maximum", models.FloatField()),
                ("percentile25", models.FloatField()),
                ("percentile75", models.FloatField()),
                (
                    "neg_exposure",
                    models.FloatField(
                        help_text="e.g., %% below the LOD",
                        verbose_name="Percent with negligible exposure",
                    ),
                ),
                (
                    "comments",
                    models.CharField(max_length=128, verbose_name="Exposure level comments"),
                ),
                ("data_location", models.CharField(help_text="e.g., table number", max_length=128)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "chemical",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="epiv2.chemical"
                    ),
                ),
                (
                    "exposure_measurement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="epiv2.exposure"
                    ),
                ),
                (
                    "study_population",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exposure_levels",
                        to="epiv2.studypopulation",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="exposure",
            name="measurement_type",
            field=models.ManyToManyField(
                to="epiv2.MeasurementType", verbose_name="Exposure measurement type"
            ),
        ),
        migrations.AddField(
            model_name="exposure",
            name="study_population",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="exposures",
                to="epiv2.studypopulation",
            ),
        ),
        migrations.CreateModel(
            name="Criteria",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "study_population",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="criteria",
                        to="epiv2.studypopulation",
                    ),
                ),
            ],
            options={"verbose_name": "Inclusion/exclusion criteria",},
        ),
        migrations.AddField(
            model_name="chemical",
            name="study_population",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="chemicals",
                to="epiv2.studypopulation",
            ),
        ),
        migrations.CreateModel(
            name="AdjustmentFactor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("description", models.CharField(max_length=128)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "study_population",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="adjustment_factors",
                        to="epiv2.studypopulation",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DataExtraction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("n", models.PositiveIntegerField()),
                (
                    "effect_estimate_type",
                    models.CharField(choices=[("OT", "Other")], max_length=128),
                ),
                ("effect_estimate", models.CharField(max_length=128)),
                ("effect_description", models.CharField(max_length=128)),
                ("measurement_timing", models.CharField(max_length=128)),
                (
                    "exposure_rank",
                    models.PositiveSmallIntegerField(
                        help_text="Rank this comparison group by exposure (lowest exposure group = 1)"
                    ),
                ),
                ("ci_lcl", models.FloatField(blank=True, verbose_name="Confidence Interval LCL")),
                ("ci_ucl", models.FloatField(blank=True, verbose_name="Confidence Interval UCL")),
                (
                    "sd_or_se",
                    models.FloatField(
                        blank=True, verbose_name="Standard Deviation or Standard Error"
                    ),
                ),
                ("pvalue", models.CharField(blank=True, max_length=128, verbose_name="p-value")),
                (
                    "significant",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No"), (None, "N/A")],
                        verbose_name="Statistically Significant",
                    ),
                ),
                ("confidence", models.CharField(max_length=128, verbose_name="Study confidence")),
                ("data_location", models.CharField(help_text="e.g., table number", max_length=128)),
                ("statistical_method", models.CharField(max_length=128)),
                ("comments", models.CharField(blank=True, max_length=128)),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "adjustment_factor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="epiv2.adjustmentfactor",
                    ),
                ),
                (
                    "exposure_level",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="epiv2.exposurelevel",
                    ),
                ),
                (
                    "outcome",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="epiv2.outcome"
                    ),
                ),
                (
                    "study_population",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data_extractions",
                        to="epiv2.studypopulation",
                    ),
                ),
            ],
            options={"verbose_name": "Quantitative data extraction",},
        ),
    ]
