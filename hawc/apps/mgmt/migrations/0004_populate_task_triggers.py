# Generated by Django 5.0.6 on 2024-08-19 21:25

from django.db import migrations

task_triggers = {
    "10": {"task_types": ["Preparation"], "transitions": [("Not Started", "Started")]},
    "20": {
        "task_types": ["Preparation", "Data Extraction"],
        "transitions": [("Started", "Completed"), ("Not Started", "Started")],
    },
    "30": {"task_types": ["Study Evaluation"], "transitions": [("Not Started", "Started")]},
    "40": {"task_types": ["Study Evaluation"], "transitions": [("Started", "Completed")]},
}


def add_task_triggers(apps, schema_editor):
    TaskTrigger = apps.get_model("mgmt", "TaskTrigger")
    Study = apps.get_model("study", "Study")
    TaskType = apps.get_model("mgmt", "TaskType")
    TaskStatus = apps.get_model("mgmt", "TaskStatus")

    task_types = TaskType.objects.all()
    statuses = TaskStatus.objects.all()

    # iterate through all current studies
    for study in Study.objects.all():
        tasks = study.tasks.all()

        # skip studies with no tasks
        if not tasks:
            continue

        # for each trigger, get the associated info from the assessment level
        for trigger, criteria in task_triggers.items():
            count = 0

            for type_name in criteria["task_types"]:
                type = task_types.get(assessment=study.assessment, name=type_name)

                curr_status_name, next_status_name = criteria["transitions"][count]
                curr_status = statuses.get(assessment=study.assessment, name=curr_status_name)
                next_status = statuses.get(assessment=study.assessment, name=next_status_name)

                # create a trigger associated with the study assessment, task types, and statuses
                TaskTrigger.objects.get_or_create(
                    assessment=study.assessment,
                    task_type=type,
                    current_status=curr_status,
                    next_status=next_status,
                    event=trigger,
                )
                count += 1


class Migration(migrations.Migration):
    dependencies = [
        ("mgmt", "0003_migrate_data"),
    ]
    operations = [
        migrations.RunPython(add_task_triggers),
    ]
