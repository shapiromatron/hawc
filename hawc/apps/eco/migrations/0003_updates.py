# Generated by Django 3.2.16 on 2023-01-13 14:44

import django.db.models.deletion
from django.db import migrations, models

import hawc.apps.common.models


class Migration(migrations.Migration):
    dependencies = [
        ("eco", "0002_load_fixtures"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="design",
            name="climate_as_reported",
        ),
        migrations.RemoveField(
            model_name="design",
            name="habitat",
        ),
        migrations.RemoveField(
            model_name="result",
            name="description",
        ),
        migrations.AddField(
            model_name="cause",
            name="exposure",
            field=models.CharField(
                blank=True,
                help_text="Describe any reported exposure metrics (e.g., AOT40, kg/ha/yr)",
                max_length=128,
                verbose_name="Exposure metric",
            ),
        ),
        migrations.AddField(
            model_name="cause",
            name="exposure_units",
            field=models.CharField(
                blank=True,
                help_text="Units associated with the exposure metric",
                max_length=128,
                verbose_name="Exposure metric units",
            ),
        ),
        migrations.AddField(
            model_name="cause",
            name="exposure_value",
            field=models.FloatField(
                blank=True,
                help_text="Specific exposure metric reported, if applicable",
                null=True,
                verbose_name="Exposure metric (numeric)",
            ),
        ),
        migrations.AddField(
            model_name="design",
            name="climates_as_reported",
            field=models.TextField(
                blank=True,
                help_text="Copy and paste exact phrase up to 1-2 sentences from article. If not stated in the article, leave blank.",
                verbose_name="Climates as reported",
            ),
        ),
        migrations.AddField(
            model_name="design",
            name="comments",
            field=models.TextField(
                blank=True, help_text="Additional information not described in other fields"
            ),
        ),
        migrations.AddField(
            model_name="design",
            name="habitats",
            field=models.ManyToManyField(
                help_text="Select one or more habitats to which the evidence applies.",
                limit_choices_to={"category": 2},
                related_name="designs_by_habitat",
                to="eco.Vocab",
            ),
        ),
        migrations.AddField(
            model_name="result",
            name="comments",
            field=models.TextField(
                blank=True, help_text="Additional information not previously described"
            ),
        ),
        migrations.AddField(
            model_name="result",
            name="name",
            field=models.CharField(
                default="rename-me", help_text="Name to refer to this result", max_length=128
            ),
            preserve_default=False,
        ),
        migrations.RenameField(
            model_name="design",
            old_name="habitat_as_reported",
            new_name="habitats_as_reported",
        ),
        migrations.AlterField(
            model_name="design",
            name="habitats_as_reported",
            field=models.TextField(
                blank=True,
                help_text="Copy and paste exact phrase up to 1-2 sentences from article. If not stated in the article, leave blank.",
                verbose_name="Habitats as reported",
            ),
        ),
        migrations.AlterField(
            model_name="cause",
            name="duration",
            field=models.CharField(
                help_text="Describe the duration or range of durations of the treatment/exposure",
                max_length=128,
                verbose_name="Duration",
            ),
        ),
        migrations.AlterField(
            model_name="cause",
            name="duration_value",
            field=models.FloatField(
                blank=True,
                help_text="Specific numeric value of duration of treatment/exposure/dose level, if applicable",
                null=True,
                verbose_name="Duration (numeric)",
            ),
        ),
        migrations.AlterField(
            model_name="cause",
            name="level",
            field=models.TextField(
                help_text="Describe the treatment/exposure/dose level or range of levels of the cause measure",
                verbose_name="Level",
            ),
        ),
        migrations.AlterField(
            model_name="cause",
            name="level_units",
            field=models.CharField(
                blank=True,
                help_text="Units associated with the treatment/exposure/dose level, if applicable",
                max_length=128,
                verbose_name="Level units",
            ),
        ),
        migrations.AlterField(
            model_name="cause",
            name="level_value",
            field=models.FloatField(
                blank=True,
                help_text="Units associated with the treatment/exposure/dose level, if applicable",
                null=True,
                verbose_name="Level (numeric)",
            ),
        ),
        migrations.AlterField(
            model_name="cause",
            name="name",
            field=models.CharField(
                help_text="Name to refer to this cause, commonly used in visualizations",
                max_length=128,
            ),
        ),
        migrations.AlterField(
            model_name="cause",
            name="species",
            field=models.CharField(
                blank=True,
                help_text="One or more species names, if applicable; using Common name (Latin binomial)",
                max_length=128,
                verbose_name="Species",
            ),
        ),
        migrations.AlterField(
            model_name="cause",
            name="term",
            field=models.ForeignKey(
                help_text="Begin typing or scroll to find the most detailed controlled vocabulary term possible; view entire <a href='/eco/terms/'>term list</a>",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="causes",
                to="eco.nestedterm",
            ),
        ),
        migrations.AlterField(
            model_name="design",
            name="climates",
            field=models.ManyToManyField(
                help_text='Select one or more <a rel="noopener noreferrer" target="_blank" href="http://koeppen-geiger.vu-wien.ac.at/present.htm">Koppen climate classifications</a> to which the evidence applies',
                limit_choices_to={"category": 11},
                related_name="designs_by_climate",
                to="eco.Vocab",
            ),
        ),
        migrations.AlterField(
            model_name="design",
            name="design",
            field=models.ForeignKey(
                help_text="Select study design",
                limit_choices_to={"category": 0},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="designs_by_type",
                to="eco.vocab",
            ),
        ),
        migrations.AlterField(
            model_name="design",
            name="ecoregions",
            field=models.ManyToManyField(
                blank=True,
                help_text='Select one or more <a rel="noopener noreferrer" target="_blank" href="https://www.epa.gov/eco-research/level-iii-and-iv-ecoregions-continental-united-states">Level III Ecoregions</a>, if known',
                limit_choices_to={"category": 12},
                related_name="designs_by_ecoregion",
                to="eco.Vocab",
            ),
        ),
        migrations.AlterField(
            model_name="design",
            name="name",
            field=models.CharField(help_text="Name to refer to this study design", max_length=128),
        ),
        migrations.AlterField(
            model_name="design",
            name="study_setting",
            field=models.ForeignKey(
                help_text="Select the setting in which evidence was generated",
                limit_choices_to={"category": 1},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="designs_by_setting",
                to="eco.vocab",
            ),
        ),
        migrations.AlterField(
            model_name="effect",
            name="biological_organization",
            field=models.ForeignKey(
                blank=True,
                help_text="Level of biological organization associated with the effect/response, if applicable",
                limit_choices_to={"category": 5},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="effect_by_bio",
                to="eco.vocab",
                verbose_name="Level of biological organization",
            ),
        ),
        migrations.AlterField(
            model_name="effect",
            name="name",
            field=models.CharField(
                help_text="Name to refer to this effect/response, commonly used in visualizations",
                max_length=128,
            ),
        ),
        migrations.AlterField(
            model_name="effect",
            name="species",
            field=models.CharField(
                blank=True,
                help_text="One or more species names, if applicable; using Common name (Latin binomial)",
                max_length=128,
                verbose_name="Species",
            ),
        ),
        migrations.AlterField(
            model_name="effect",
            name="term",
            field=models.ForeignKey(
                help_text="Begin typing or scroll to find the most detailed controlled vocabulary term possible; view entire <a href='/eco/terms/'>term list</a>",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="effects",
                to="eco.nestedterm",
            ),
        ),
        migrations.AlterField(
            model_name="result",
            name="measure_type",
            field=models.ForeignKey(
                blank=True,
                help_text="Response measure type",
                limit_choices_to=models.Q(("category", 8), ("parent__isnull", False)),
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="result_by_measure",
                to="eco.vocab",
                verbose_name="Response measure type",
            ),
        ),
        migrations.AlterField(
            model_name="result",
            name="modifying_factors",
            field=models.CharField(
                blank=True,
                default="",
                help_text="A comma-separated list of modifying factors, confounding variables, model co-variates, etc. that were analyzed and tested for the potential to influence the relationship between cause and effect",
                max_length=256,
                verbose_name="Modifying factors",
            ),
        ),
        migrations.AlterField(
            model_name="result",
            name="relationship_direction",
            field=models.IntegerField(
                choices=[
                    (0, "Increase"),
                    (1, "Decrease"),
                    (2, "Change"),
                    (3, "No change"),
                    (4, "Multiple"),
                    (10, "Other"),
                ],
                help_text="Direction of cause and effect relationship",
                verbose_name="Direction of relationship",
            ),
        ),
        migrations.AlterField(
            model_name="result",
            name="sample_size",
            field=models.IntegerField(
                blank=True,
                help_text="Number of samples used to calculate numerical response measure. If you need to report number of control samples and number of treatment samples, use Comment",
                null=True,
                verbose_name="Sample size",
            ),
        ),
        migrations.AlterField(
            model_name="result",
            name="statistical_sig_type",
            field=models.ForeignKey(
                help_text="Statistical significance measure reported",
                limit_choices_to={"category": 10},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="result_by_sig",
                to="eco.vocab",
                verbose_name="Statistical significance",
            ),
        ),
        migrations.AlterField(
            model_name="result",
            name="statistical_sig_value",
            field=hawc.apps.common.models.NumericTextField(
                blank=True,
                default="",
                verbose_name="Statistical significance value",
                help_text="Numerical value of the statistical significance. Non-numeric values can be used if necessary, but should be limited to <, ≤, ≥, >.",
                max_length=16,
            ),
        ),
        migrations.AlterField(
            model_name="result",
            name="variability",
            field=models.ForeignKey(
                help_text="Type of variability reported for the numeric response measure",
                limit_choices_to={"category": 9},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="result_by_variability",
                to="eco.vocab",
                verbose_name="Response variability",
            ),
        ),
    ]
