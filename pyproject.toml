[project]
name = "hawc"
license = {file = "LICENSE"}
authors = [{name = "Andy Shapiro", email = "shapiromatron@gmail.com"}]
readme = "README.rst"
dynamic = ["version", "description"]
keywords = [
  "data visualization",
  "epidemiology",
  "risk assessment",
  "systematic review",
  "toxicology",
]
classifiers = [
  "Intended Audience :: Science/Research",
  "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.12"
dependencies = [
  # web application
  "Django~=5.1",
  "django-crispy-forms==2.2",
  "crispy-bootstrap4==2024.1",
  "django-filter==24.2",
  "django-redis==5.4.0",
  "django-reversion==5.0.12",
  "django-autocomplete-light==3.11.0",
  "django-taggit==5.0.1",
  "django-treebeard==4.7.1",
  "djangorestframework==3.15.2",
  "django-webpack-loader==3.1.0",
  "uritemplate==4.1.1",
  "inflection==0.5.1",
  "pyyaml==6.0.1",
  "gunicorn==22.0.0",
  "wagtail~=6.1.3",
  "wagtail-draftail-anchors==0.6.0",
  # tasks
  "celery==5.4.0",
  "billiard==4.2.0",
  "kombu==5.3.7",
  # utilities
  "jsonschema==4.22.0",
  "lxml==5.2.2",
  "psycopg2-binary==2.9.9",
  "redis==5.0.6",
  "requests==2.32.3",
  "pydantic==2.7.4",
  "nh3==0.2.17",
  "tinycss2==1.3.0",
  # computational
  "numpy==1.26.4",
  "pandas==2.2.2",
  "openpyxl==3.1.4",
  "jinja2==3.1.4",
  "plotly==5.22.0",
  "scipy==1.13.1",
  "bmds==23.4",
  # exports
  "rispy==0.9.0",
  "python-docx==1.1.2",
]

[project.optional-dependencies]
dev = [
  # build
  "flit==3.9.0",
  # lint and formatting tools
  "ruff==0.4.9",
  "djhtml==3.0.6",
  "pre-commit==3.7.1",
  # django development
  "django-debug-toolbar==4.4.2",
  "django-browser-reload==1.12.1",
  "django-extensions==3.2.3",
  "faker==25.8.0",
  # tests
  "coverage==7.5.3",
  "pytest==8.2.2",
  "pytest-django==4.8.0",
  "vcrpy==6.0.1",
  "pytest-recording==0.13.1",
  "playwright==1.44.0",
  "pytest-playwright==0.5.0",
]
docs = [
  "mkdocs-material==9.5.27",
]
prod = [
  "django-anymail==10.3",
  "sentry_sdk==2.5.1",
]

[project.scripts]
manage = "hawc:manage"
"manage.py" = "hawc:manage"

[project.urls]
Documentation = "https://hawc.readthedocs.io/"
Source = "https://github.com/shapiromatron/hawc"

[build-system]
requires = ["flit_core ~=3.9"]
build-backend = "flit_core.buildapi"

[tool.coverage.run]
omit = [
  "*migrations*",
  "./build/",
  "./client/hawc_client/interactive.py",
  "./hawc/apps/*/management/*",
  "./hawc/main/*",
  "./scripts/private/*",
  "./tests/*",
  "./venv/*",
]

[tool.flit.sdist]
include = [
  "hawc/static/bundles/**/*",
  "hawc/gitcommit.json",
  "hawc/webpack-stats.json",
]
exclude = [
  ".github",
  "bin",
  "client",
  "compose",
  "docs",
  "frontend",
  "scripts",
  "tests",
  "vendor",
]

[tool.ruff]
line-length = 100
target-version = "py311"
lint.select = ["F", "E", "W", "I", "UP", "S", "B", "T20", "RUF"]
lint.ignore = ["E501", "S308", "S314", "S603", "RUF012", "RUF015"]
lint.unfixable = ["F401", "F841"]

[tool.ruff.lint.isort]
known-first-party = ["hawc", "hawc_client"]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["S101", "S106"]
"scripts/*.py" = ["T201"]
"**/management/**.py" = ["T201"]
"**/migrations/**.py" = ["T201"]

[tool.pytest.ini_options]
addopts = "--ds=hawc.main.settings.unittest --record-mode=once --reuse-db --nomigrations"
testpaths = [
  "tests/hawc",
  "tests/integration",
  "tests/client",
]
